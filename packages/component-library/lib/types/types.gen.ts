// This file is auto-generated by @hey-api/openapi-ts

export type About = {
    id?: number;
    documentId?: string;
    title?: string;
    blocks?: Array<(SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedSliderComponent)>;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
        id?: number;
        documentId?: string;
    };
    updatedBy?: {
        id?: number;
        documentId?: string;
    };
    locale?: string;
    localizations?: Array<{
        id?: number;
        documentId?: string;
        title?: string;
        blocks?: Array<(SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedSliderComponent)>;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    }>;
};

export type AboutListResponse = {
    data?: Array<About>;
    meta?: {
        pagination?: {
            page?: number;
            pageSize?: number;
            pageCount?: number;
            total?: number;
        };
    };
};

export type AboutRequest = {
    data: {
        title?: string;
        blocks?: Array<(SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedSliderComponent)>;
        locale?: string;
        localizations?: Array<(number | string)>;
    };
};

export type AboutResponse = {
    data?: About;
    meta?: {
        [key: string]: unknown;
    };
};

export type Article = {
    id?: number;
    documentId?: string;
    title?: string;
    description?: string;
    slug?: string;
    cover?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: unknown;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: unknown;
        related?: Array<{
            id?: number;
            documentId?: string;
        }>;
        folder?: {
            id?: number;
            documentId?: string;
            name?: string;
            pathId?: number;
            parent?: {
                id?: number;
                documentId?: string;
            };
            children?: Array<{
                id?: number;
                documentId?: string;
            }>;
            files?: Array<{
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                    firstname?: string;
                    lastname?: string;
                    username?: string;
                    email?: string;
                    resetPasswordToken?: string;
                    registrationToken?: string;
                    isActive?: boolean;
                    roles?: Array<{
                        id?: number;
                        documentId?: string;
                        name?: string;
                        code?: string;
                        description?: string;
                        users?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                        permissions?: Array<{
                            id?: number;
                            documentId?: string;
                            action?: string;
                            actionParameters?: unknown;
                            subject?: string;
                            properties?: unknown;
                            conditions?: unknown;
                            role?: {
                                id?: number;
                                documentId?: string;
                            };
                            createdAt?: string;
                            updatedAt?: string;
                            publishedAt?: string;
                            createdBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            updatedBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            locale?: string;
                            localizations?: Array<{
                                id?: number;
                                documentId?: string;
                            }>;
                        }>;
                        createdAt?: string;
                        updatedAt?: string;
                        publishedAt?: string;
                        createdBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        updatedBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        locale?: string;
                        localizations?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                    }>;
                    blocked?: boolean;
                    preferedLanguage?: string;
                    createdAt?: string;
                    updatedAt?: string;
                    publishedAt?: string;
                    createdBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    updatedBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    locale?: string;
                    localizations?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            }>;
            path?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    };
    author?: {
        id?: number;
        documentId?: string;
        name?: string;
        avatar?: {
            id?: number;
            documentId?: string;
            name?: string;
            alternativeText?: string;
            caption?: string;
            width?: number;
            height?: number;
            formats?: unknown;
            hash?: string;
            ext?: string;
            mime?: string;
            size?: number;
            url?: string;
            previewUrl?: string;
            provider?: string;
            provider_metadata?: unknown;
            related?: Array<{
                id?: number;
                documentId?: string;
            }>;
            folder?: {
                id?: number;
                documentId?: string;
            };
            folderPath?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        email?: string;
        articles?: Array<{
            id?: number;
            documentId?: string;
            title?: string;
            description?: string;
            slug?: string;
            cover?: {
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            };
            author?: {
                id?: number;
                documentId?: string;
            };
            category?: {
                id?: number;
                documentId?: string;
                name?: string;
                slug?: string;
                articles?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                description?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            };
            blocks?: Array<(SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedSliderComponent)>;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        }>;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    };
    category?: {
        id?: number;
        documentId?: string;
    };
    blocks?: Array<(SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedSliderComponent)>;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
        id?: number;
        documentId?: string;
    };
    updatedBy?: {
        id?: number;
        documentId?: string;
    };
    locale?: string;
    localizations?: Array<{
        id?: number;
        documentId?: string;
    }>;
};

export type ArticleListResponse = {
    data?: Array<Article>;
    meta?: {
        pagination?: {
            page?: number;
            pageSize?: number;
            pageCount?: number;
            total?: number;
        };
    };
};

export type ArticleRequest = {
    data: {
        title?: string;
        description?: string;
        slug?: string;
        cover?: (number | string);
        author?: (number | string);
        category?: (number | string);
        blocks?: Array<(SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedSliderComponent)>;
        locale?: string;
        localizations?: Array<(number | string)>;
    };
};

export type ArticleResponse = {
    data?: Article;
    meta?: {
        [key: string]: unknown;
    };
};

export type Author = {
    id?: number;
    documentId?: string;
    name?: string;
    avatar?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: unknown;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: unknown;
        related?: Array<{
            id?: number;
            documentId?: string;
        }>;
        folder?: {
            id?: number;
            documentId?: string;
            name?: string;
            pathId?: number;
            parent?: {
                id?: number;
                documentId?: string;
            };
            children?: Array<{
                id?: number;
                documentId?: string;
            }>;
            files?: Array<{
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                    firstname?: string;
                    lastname?: string;
                    username?: string;
                    email?: string;
                    resetPasswordToken?: string;
                    registrationToken?: string;
                    isActive?: boolean;
                    roles?: Array<{
                        id?: number;
                        documentId?: string;
                        name?: string;
                        code?: string;
                        description?: string;
                        users?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                        permissions?: Array<{
                            id?: number;
                            documentId?: string;
                            action?: string;
                            actionParameters?: unknown;
                            subject?: string;
                            properties?: unknown;
                            conditions?: unknown;
                            role?: {
                                id?: number;
                                documentId?: string;
                            };
                            createdAt?: string;
                            updatedAt?: string;
                            publishedAt?: string;
                            createdBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            updatedBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            locale?: string;
                            localizations?: Array<{
                                id?: number;
                                documentId?: string;
                            }>;
                        }>;
                        createdAt?: string;
                        updatedAt?: string;
                        publishedAt?: string;
                        createdBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        updatedBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        locale?: string;
                        localizations?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                    }>;
                    blocked?: boolean;
                    preferedLanguage?: string;
                    createdAt?: string;
                    updatedAt?: string;
                    publishedAt?: string;
                    createdBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    updatedBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    locale?: string;
                    localizations?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            }>;
            path?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    };
    email?: string;
    articles?: Array<{
        id?: number;
        documentId?: string;
        title?: string;
        description?: string;
        slug?: string;
        cover?: {
            id?: number;
            documentId?: string;
            name?: string;
            alternativeText?: string;
            caption?: string;
            width?: number;
            height?: number;
            formats?: unknown;
            hash?: string;
            ext?: string;
            mime?: string;
            size?: number;
            url?: string;
            previewUrl?: string;
            provider?: string;
            provider_metadata?: unknown;
            related?: Array<{
                id?: number;
                documentId?: string;
            }>;
            folder?: {
                id?: number;
                documentId?: string;
            };
            folderPath?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        author?: {
            id?: number;
            documentId?: string;
            name?: string;
            avatar?: {
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            };
            email?: string;
            articles?: Array<{
                id?: number;
                documentId?: string;
            }>;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        category?: {
            id?: number;
            documentId?: string;
            name?: string;
            slug?: string;
            articles?: Array<{
                id?: number;
                documentId?: string;
            }>;
            description?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        blocks?: Array<(SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedSliderComponent)>;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    }>;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
        id?: number;
        documentId?: string;
    };
    updatedBy?: {
        id?: number;
        documentId?: string;
    };
    locale?: string;
    localizations?: Array<{
        id?: number;
        documentId?: string;
    }>;
};

export type AuthorListResponse = {
    data?: Array<Author>;
    meta?: {
        pagination?: {
            page?: number;
            pageSize?: number;
            pageCount?: number;
            total?: number;
        };
    };
};

export type AuthorRequest = {
    data: {
        name?: string;
        avatar?: (number | string);
        email?: string;
        articles?: Array<(number | string)>;
        locale?: string;
        localizations?: Array<(number | string)>;
    };
};

export type AuthorResponse = {
    data?: Author;
    meta?: {
        [key: string]: unknown;
    };
};

export type Category = {
    id?: number;
    documentId?: string;
    name?: string;
    slug?: string;
    articles?: Array<{
        id?: number;
        documentId?: string;
        title?: string;
        description?: string;
        slug?: string;
        cover?: {
            id?: number;
            documentId?: string;
            name?: string;
            alternativeText?: string;
            caption?: string;
            width?: number;
            height?: number;
            formats?: unknown;
            hash?: string;
            ext?: string;
            mime?: string;
            size?: number;
            url?: string;
            previewUrl?: string;
            provider?: string;
            provider_metadata?: unknown;
            related?: Array<{
                id?: number;
                documentId?: string;
            }>;
            folder?: {
                id?: number;
                documentId?: string;
                name?: string;
                pathId?: number;
                parent?: {
                    id?: number;
                    documentId?: string;
                };
                children?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                files?: Array<{
                    id?: number;
                    documentId?: string;
                    name?: string;
                    alternativeText?: string;
                    caption?: string;
                    width?: number;
                    height?: number;
                    formats?: unknown;
                    hash?: string;
                    ext?: string;
                    mime?: string;
                    size?: number;
                    url?: string;
                    previewUrl?: string;
                    provider?: string;
                    provider_metadata?: unknown;
                    related?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                    folder?: {
                        id?: number;
                        documentId?: string;
                    };
                    folderPath?: string;
                    createdAt?: string;
                    updatedAt?: string;
                    publishedAt?: string;
                    createdBy?: {
                        id?: number;
                        documentId?: string;
                        firstname?: string;
                        lastname?: string;
                        username?: string;
                        email?: string;
                        resetPasswordToken?: string;
                        registrationToken?: string;
                        isActive?: boolean;
                        roles?: Array<{
                            id?: number;
                            documentId?: string;
                            name?: string;
                            code?: string;
                            description?: string;
                            users?: Array<{
                                id?: number;
                                documentId?: string;
                            }>;
                            permissions?: Array<{
                                id?: number;
                                documentId?: string;
                                action?: string;
                                actionParameters?: unknown;
                                subject?: string;
                                properties?: unknown;
                                conditions?: unknown;
                                role?: {
                                    id?: number;
                                    documentId?: string;
                                };
                                createdAt?: string;
                                updatedAt?: string;
                                publishedAt?: string;
                                createdBy?: {
                                    id?: number;
                                    documentId?: string;
                                };
                                updatedBy?: {
                                    id?: number;
                                    documentId?: string;
                                };
                                locale?: string;
                                localizations?: Array<{
                                    id?: number;
                                    documentId?: string;
                                }>;
                            }>;
                            createdAt?: string;
                            updatedAt?: string;
                            publishedAt?: string;
                            createdBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            updatedBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            locale?: string;
                            localizations?: Array<{
                                id?: number;
                                documentId?: string;
                            }>;
                        }>;
                        blocked?: boolean;
                        preferedLanguage?: string;
                        createdAt?: string;
                        updatedAt?: string;
                        publishedAt?: string;
                        createdBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        updatedBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        locale?: string;
                        localizations?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                    };
                    updatedBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    locale?: string;
                    localizations?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                }>;
                path?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            };
            folderPath?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        author?: {
            id?: number;
            documentId?: string;
            name?: string;
            avatar?: {
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            };
            email?: string;
            articles?: Array<{
                id?: number;
                documentId?: string;
            }>;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        category?: {
            id?: number;
            documentId?: string;
            name?: string;
            slug?: string;
            articles?: Array<{
                id?: number;
                documentId?: string;
            }>;
            description?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        blocks?: Array<(SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedSliderComponent)>;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    }>;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
        id?: number;
        documentId?: string;
    };
    updatedBy?: {
        id?: number;
        documentId?: string;
    };
    locale?: string;
    localizations?: Array<{
        id?: number;
        documentId?: string;
    }>;
};

export type CategoryListResponse = {
    data?: Array<Category>;
    meta?: {
        pagination?: {
            page?: number;
            pageSize?: number;
            pageCount?: number;
            total?: number;
        };
    };
};

export type CategoryRequest = {
    data: {
        name?: string;
        slug?: string;
        articles?: Array<(number | string)>;
        description?: string;
        locale?: string;
        localizations?: Array<(number | string)>;
    };
};

export type CategoryResponse = {
    data?: Category;
    meta?: {
        [key: string]: unknown;
    };
};

export type Error = {
    data?: (({
    [key: string]: unknown;
} | Array<{
    [key: string]: unknown;
}>) | null);
    error: {
        status?: number;
        name?: string;
        message?: string;
        details?: {
            [key: string]: unknown;
        };
    };
};

export type Global = {
    id?: number;
    documentId?: string;
    siteName: string;
    favicon?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: unknown;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: unknown;
        related?: Array<{
            id?: number;
            documentId?: string;
        }>;
        folder?: {
            id?: number;
            documentId?: string;
            name?: string;
            pathId?: number;
            parent?: {
                id?: number;
                documentId?: string;
            };
            children?: Array<{
                id?: number;
                documentId?: string;
            }>;
            files?: Array<{
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                    firstname?: string;
                    lastname?: string;
                    username?: string;
                    email?: string;
                    resetPasswordToken?: string;
                    registrationToken?: string;
                    isActive?: boolean;
                    roles?: Array<{
                        id?: number;
                        documentId?: string;
                        name?: string;
                        code?: string;
                        description?: string;
                        users?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                        permissions?: Array<{
                            id?: number;
                            documentId?: string;
                            action?: string;
                            actionParameters?: unknown;
                            subject?: string;
                            properties?: unknown;
                            conditions?: unknown;
                            role?: {
                                id?: number;
                                documentId?: string;
                            };
                            createdAt?: string;
                            updatedAt?: string;
                            publishedAt?: string;
                            createdBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            updatedBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            locale?: string;
                            localizations?: Array<{
                                id?: number;
                                documentId?: string;
                            }>;
                        }>;
                        createdAt?: string;
                        updatedAt?: string;
                        publishedAt?: string;
                        createdBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        updatedBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        locale?: string;
                        localizations?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                    }>;
                    blocked?: boolean;
                    preferedLanguage?: string;
                    createdAt?: string;
                    updatedAt?: string;
                    publishedAt?: string;
                    createdBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    updatedBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    locale?: string;
                    localizations?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            }>;
            path?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    };
    siteDescription: string;
    defaultSeo?: SharedSeoComponent;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
        id?: number;
        documentId?: string;
    };
    updatedBy?: {
        id?: number;
        documentId?: string;
    };
    locale?: string;
    localizations?: Array<{
        id?: number;
        documentId?: string;
        siteName?: string;
        favicon?: {
            id?: number;
            documentId?: string;
            name?: string;
            alternativeText?: string;
            caption?: string;
            width?: number;
            height?: number;
            formats?: unknown;
            hash?: string;
            ext?: string;
            mime?: string;
            size?: number;
            url?: string;
            previewUrl?: string;
            provider?: string;
            provider_metadata?: unknown;
            related?: Array<{
                id?: number;
                documentId?: string;
            }>;
            folder?: {
                id?: number;
                documentId?: string;
            };
            folderPath?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        siteDescription?: string;
        defaultSeo?: SharedSeoComponent;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    }>;
};

export type GlobalListResponse = {
    data?: Array<Global>;
    meta?: {
        pagination?: {
            page?: number;
            pageSize?: number;
            pageCount?: number;
            total?: number;
        };
    };
};

export type GlobalRequest = {
    data: {
        siteName: string;
        favicon?: (number | string);
        siteDescription: string;
        defaultSeo?: SharedSeoComponent;
        locale?: string;
        localizations?: Array<(number | string)>;
    };
};

export type GlobalResponse = {
    data?: Global;
    meta?: {
        [key: string]: unknown;
    };
};

export type HomePage = {
    id?: number;
    documentId?: string;
    DynamicZone?: Array<(SharedSliderComponent | SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedBannerComponent | SharedHomeHotelHighlightingComponent)>;
    Seo?: SharedSeoComponent;
    PageName: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
        id?: number;
        documentId?: string;
    };
    updatedBy?: {
        id?: number;
        documentId?: string;
    };
    locale?: string;
    localizations?: Array<{
        id?: number;
        documentId?: string;
        DynamicZone?: Array<(SharedSliderComponent | SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedBannerComponent | SharedHomeHotelHighlightingComponent)>;
        Seo?: SharedSeoComponent;
        PageName?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    }>;
};

export type HomePageListResponse = {
    data?: Array<HomePage>;
    meta?: {
        pagination?: {
            page?: number;
            pageSize?: number;
            pageCount?: number;
            total?: number;
        };
    };
};

export type HomePageRequest = {
    data: {
        DynamicZone?: Array<(SharedSliderComponent | SharedMediaComponent | SharedQuoteComponent | SharedRichTextComponent | SharedBannerComponent | SharedHomeHotelHighlightingComponent)>;
        Seo?: SharedSeoComponent;
        PageName: string;
        locale?: string;
        localizations?: Array<(number | string)>;
    };
};

export type HomePageResponse = {
    data?: HomePage;
    meta?: {
        [key: string]: unknown;
    };
};

export type Hotel = {
    id?: number;
    documentId?: string;
    nom: string;
    image: Array<{
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: unknown;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: unknown;
        related?: Array<{
            id?: number;
            documentId?: string;
        }>;
        folder?: {
            id?: number;
            documentId?: string;
            name?: string;
            pathId?: number;
            parent?: {
                id?: number;
                documentId?: string;
            };
            children?: Array<{
                id?: number;
                documentId?: string;
            }>;
            files?: Array<{
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                    firstname?: string;
                    lastname?: string;
                    username?: string;
                    email?: string;
                    resetPasswordToken?: string;
                    registrationToken?: string;
                    isActive?: boolean;
                    roles?: Array<{
                        id?: number;
                        documentId?: string;
                        name?: string;
                        code?: string;
                        description?: string;
                        users?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                        permissions?: Array<{
                            id?: number;
                            documentId?: string;
                            action?: string;
                            actionParameters?: unknown;
                            subject?: string;
                            properties?: unknown;
                            conditions?: unknown;
                            role?: {
                                id?: number;
                                documentId?: string;
                            };
                            createdAt?: string;
                            updatedAt?: string;
                            publishedAt?: string;
                            createdBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            updatedBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            locale?: string;
                            localizations?: Array<{
                                id?: number;
                                documentId?: string;
                            }>;
                        }>;
                        createdAt?: string;
                        updatedAt?: string;
                        publishedAt?: string;
                        createdBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        updatedBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        locale?: string;
                        localizations?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                    }>;
                    blocked?: boolean;
                    preferedLanguage?: string;
                    createdAt?: string;
                    updatedAt?: string;
                    publishedAt?: string;
                    createdBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    updatedBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    locale?: string;
                    localizations?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            }>;
            path?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    }>;
    description: string;
    slug: string;
    tags?: Array<{
        id?: number;
        documentId?: string;
        label?: string;
        hotels?: Array<{
            id?: number;
            documentId?: string;
            nom?: string;
            image?: Array<{
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            }>;
            description?: string;
            slug?: string;
            tags?: Array<{
                id?: number;
                documentId?: string;
            }>;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        }>;
        tag_category?: {
            id?: number;
            documentId?: string;
            CatName?: string;
            color?: string;
            picto?: {
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            };
            tags?: Array<{
                id?: number;
                documentId?: string;
            }>;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    }>;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
        id?: number;
        documentId?: string;
    };
    updatedBy?: {
        id?: number;
        documentId?: string;
    };
    locale?: string;
    localizations?: Array<{
        id?: number;
        documentId?: string;
    }>;
};

export type HotelListResponse = {
    data?: Array<Hotel>;
    meta?: {
        pagination?: {
            page?: number;
            pageSize?: number;
            pageCount?: number;
            total?: number;
        };
    };
};

export type HotelRequest = {
    data: {
        nom: string;
        image: Array<(number | string)>;
        description: string;
        slug: string;
        tags?: Array<(number | string)>;
        locale?: string;
        localizations?: Array<(number | string)>;
    };
};

export type HotelResponse = {
    data?: Hotel;
    meta?: {
        [key: string]: unknown;
    };
};

export type SharedBannerComponent = {
    id?: number;
    __component?: 'shared.banner';
    TitleBaner?: string;
    ImgBanner?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: unknown;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: unknown;
        related?: Array<{
            id?: number;
            documentId?: string;
        }>;
        folder?: {
            id?: number;
            documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    };
};

export type __component = 'shared.banner';

export type SharedHomeHotelHighlightingComponent = {
    id?: number;
    __component?: 'shared.home-hotel-highlighting';
    pushHotelByGamme?: Array<SharedPushHotelByGammeComponent>;
};

export type __component2 = 'shared.home-hotel-highlighting';

export type SharedMediaComponent = {
    id?: number;
    __component?: 'shared.media';
    file?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: unknown;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: unknown;
        related?: Array<{
            id?: number;
            documentId?: string;
        }>;
        folder?: {
            id?: number;
            documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    };
};

export type __component3 = 'shared.media';

export type SharedPushHotelByGammeComponent = {
    id?: number;
    pushHotel?: SharedPushHotelComponent;
    title?: string;
    color?: string;
};

export type SharedPushHotelComponent = {
    id?: number;
    hotels?: Array<{
        id?: number;
        documentId?: string;
    }>;
};

export type SharedQuoteComponent = {
    id?: number;
    __component?: 'shared.quote';
    title?: string;
    body?: string;
};

export type __component4 = 'shared.quote';

export type SharedRichTextComponent = {
    id?: number;
    __component?: 'shared.rich-text';
    body?: unknown;
};

export type __component5 = 'shared.rich-text';

export type SharedSeoComponent = {
    id?: number;
    metaTitle?: string;
    metaDescription?: string;
    shareImage?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: unknown;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: unknown;
        related?: Array<{
            id?: number;
            documentId?: string;
        }>;
        folder?: {
            id?: number;
            documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    };
};

export type SharedSliderComponent = {
    id?: number;
    __component?: 'shared.slider';
    files?: Array<{
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: unknown;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: unknown;
        related?: Array<{
            id?: number;
            documentId?: string;
        }>;
        folder?: {
            id?: number;
            documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    }>;
};

export type __component6 = 'shared.slider';

export type Tag = {
    id?: number;
    documentId?: string;
    label: string;
    hotels?: Array<{
        id?: number;
        documentId?: string;
        nom?: string;
        image?: Array<{
            id?: number;
            documentId?: string;
            name?: string;
            alternativeText?: string;
            caption?: string;
            width?: number;
            height?: number;
            formats?: unknown;
            hash?: string;
            ext?: string;
            mime?: string;
            size?: number;
            url?: string;
            previewUrl?: string;
            provider?: string;
            provider_metadata?: unknown;
            related?: Array<{
                id?: number;
                documentId?: string;
            }>;
            folder?: {
                id?: number;
                documentId?: string;
                name?: string;
                pathId?: number;
                parent?: {
                    id?: number;
                    documentId?: string;
                };
                children?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                files?: Array<{
                    id?: number;
                    documentId?: string;
                    name?: string;
                    alternativeText?: string;
                    caption?: string;
                    width?: number;
                    height?: number;
                    formats?: unknown;
                    hash?: string;
                    ext?: string;
                    mime?: string;
                    size?: number;
                    url?: string;
                    previewUrl?: string;
                    provider?: string;
                    provider_metadata?: unknown;
                    related?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                    folder?: {
                        id?: number;
                        documentId?: string;
                    };
                    folderPath?: string;
                    createdAt?: string;
                    updatedAt?: string;
                    publishedAt?: string;
                    createdBy?: {
                        id?: number;
                        documentId?: string;
                        firstname?: string;
                        lastname?: string;
                        username?: string;
                        email?: string;
                        resetPasswordToken?: string;
                        registrationToken?: string;
                        isActive?: boolean;
                        roles?: Array<{
                            id?: number;
                            documentId?: string;
                            name?: string;
                            code?: string;
                            description?: string;
                            users?: Array<{
                                id?: number;
                                documentId?: string;
                            }>;
                            permissions?: Array<{
                                id?: number;
                                documentId?: string;
                                action?: string;
                                actionParameters?: unknown;
                                subject?: string;
                                properties?: unknown;
                                conditions?: unknown;
                                role?: {
                                    id?: number;
                                    documentId?: string;
                                };
                                createdAt?: string;
                                updatedAt?: string;
                                publishedAt?: string;
                                createdBy?: {
                                    id?: number;
                                    documentId?: string;
                                };
                                updatedBy?: {
                                    id?: number;
                                    documentId?: string;
                                };
                                locale?: string;
                                localizations?: Array<{
                                    id?: number;
                                    documentId?: string;
                                }>;
                            }>;
                            createdAt?: string;
                            updatedAt?: string;
                            publishedAt?: string;
                            createdBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            updatedBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            locale?: string;
                            localizations?: Array<{
                                id?: number;
                                documentId?: string;
                            }>;
                        }>;
                        blocked?: boolean;
                        preferedLanguage?: string;
                        createdAt?: string;
                        updatedAt?: string;
                        publishedAt?: string;
                        createdBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        updatedBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        locale?: string;
                        localizations?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                    };
                    updatedBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    locale?: string;
                    localizations?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                }>;
                path?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            };
            folderPath?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        }>;
        description?: string;
        slug?: string;
        tags?: Array<{
            id?: number;
            documentId?: string;
            label?: string;
            hotels?: Array<{
                id?: number;
                documentId?: string;
            }>;
            tag_category?: {
                id?: number;
                documentId?: string;
                CatName?: string;
                color?: string;
                picto?: {
                    id?: number;
                    documentId?: string;
                    name?: string;
                    alternativeText?: string;
                    caption?: string;
                    width?: number;
                    height?: number;
                    formats?: unknown;
                    hash?: string;
                    ext?: string;
                    mime?: string;
                    size?: number;
                    url?: string;
                    previewUrl?: string;
                    provider?: string;
                    provider_metadata?: unknown;
                    related?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                    folder?: {
                        id?: number;
                        documentId?: string;
                    };
                    folderPath?: string;
                    createdAt?: string;
                    updatedAt?: string;
                    publishedAt?: string;
                    createdBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    updatedBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    locale?: string;
                    localizations?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                };
                tags?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            };
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        }>;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    }>;
    tag_category?: {
        id?: number;
        documentId?: string;
    };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
        id?: number;
        documentId?: string;
    };
    updatedBy?: {
        id?: number;
        documentId?: string;
    };
    locale?: string;
    localizations?: Array<{
        id?: number;
        documentId?: string;
    }>;
};

export type TagCategory = {
    id?: number;
    documentId?: string;
    CatName?: string;
    color?: string;
    picto?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: unknown;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: unknown;
        related?: Array<{
            id?: number;
            documentId?: string;
        }>;
        folder?: {
            id?: number;
            documentId?: string;
            name?: string;
            pathId?: number;
            parent?: {
                id?: number;
                documentId?: string;
            };
            children?: Array<{
                id?: number;
                documentId?: string;
            }>;
            files?: Array<{
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                    firstname?: string;
                    lastname?: string;
                    username?: string;
                    email?: string;
                    resetPasswordToken?: string;
                    registrationToken?: string;
                    isActive?: boolean;
                    roles?: Array<{
                        id?: number;
                        documentId?: string;
                        name?: string;
                        code?: string;
                        description?: string;
                        users?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                        permissions?: Array<{
                            id?: number;
                            documentId?: string;
                            action?: string;
                            actionParameters?: unknown;
                            subject?: string;
                            properties?: unknown;
                            conditions?: unknown;
                            role?: {
                                id?: number;
                                documentId?: string;
                            };
                            createdAt?: string;
                            updatedAt?: string;
                            publishedAt?: string;
                            createdBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            updatedBy?: {
                                id?: number;
                                documentId?: string;
                            };
                            locale?: string;
                            localizations?: Array<{
                                id?: number;
                                documentId?: string;
                            }>;
                        }>;
                        createdAt?: string;
                        updatedAt?: string;
                        publishedAt?: string;
                        createdBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        updatedBy?: {
                            id?: number;
                            documentId?: string;
                        };
                        locale?: string;
                        localizations?: Array<{
                            id?: number;
                            documentId?: string;
                        }>;
                    }>;
                    blocked?: boolean;
                    preferedLanguage?: string;
                    createdAt?: string;
                    updatedAt?: string;
                    publishedAt?: string;
                    createdBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    updatedBy?: {
                        id?: number;
                        documentId?: string;
                    };
                    locale?: string;
                    localizations?: Array<{
                        id?: number;
                        documentId?: string;
                    }>;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            }>;
            path?: string;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    };
    tags?: Array<{
        id?: number;
        documentId?: string;
        label?: string;
        hotels?: Array<{
            id?: number;
            documentId?: string;
            nom?: string;
            image?: Array<{
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            }>;
            description?: string;
            slug?: string;
            tags?: Array<{
                id?: number;
                documentId?: string;
            }>;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        }>;
        tag_category?: {
            id?: number;
            documentId?: string;
            CatName?: string;
            color?: string;
            picto?: {
                id?: number;
                documentId?: string;
                name?: string;
                alternativeText?: string;
                caption?: string;
                width?: number;
                height?: number;
                formats?: unknown;
                hash?: string;
                ext?: string;
                mime?: string;
                size?: number;
                url?: string;
                previewUrl?: string;
                provider?: string;
                provider_metadata?: unknown;
                related?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
                folder?: {
                    id?: number;
                    documentId?: string;
                };
                folderPath?: string;
                createdAt?: string;
                updatedAt?: string;
                publishedAt?: string;
                createdBy?: {
                    id?: number;
                    documentId?: string;
                };
                updatedBy?: {
                    id?: number;
                    documentId?: string;
                };
                locale?: string;
                localizations?: Array<{
                    id?: number;
                    documentId?: string;
                }>;
            };
            tags?: Array<{
                id?: number;
                documentId?: string;
            }>;
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
                id?: number;
                documentId?: string;
            };
            updatedBy?: {
                id?: number;
                documentId?: string;
            };
            locale?: string;
            localizations?: Array<{
                id?: number;
                documentId?: string;
            }>;
        };
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
            id?: number;
            documentId?: string;
        };
        updatedBy?: {
            id?: number;
            documentId?: string;
        };
        locale?: string;
        localizations?: Array<{
            id?: number;
            documentId?: string;
        }>;
    }>;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
        id?: number;
        documentId?: string;
    };
    updatedBy?: {
        id?: number;
        documentId?: string;
    };
    locale?: string;
    localizations?: Array<{
        id?: number;
        documentId?: string;
    }>;
};

export type TagCategoryListResponse = {
    data?: Array<TagCategory>;
    meta?: {
        pagination?: {
            page?: number;
            pageSize?: number;
            pageCount?: number;
            total?: number;
        };
    };
};

export type TagCategoryRequest = {
    data: {
        CatName?: string;
        color?: string;
        picto?: (number | string);
        tags?: Array<(number | string)>;
        locale?: string;
        localizations?: Array<(number | string)>;
    };
};

export type TagCategoryResponse = {
    data?: TagCategory;
    meta?: {
        [key: string]: unknown;
    };
};

export type TagListResponse = {
    data?: Array<Tag>;
    meta?: {
        pagination?: {
            page?: number;
            pageSize?: number;
            pageCount?: number;
            total?: number;
        };
    };
};

export type TagRequest = {
    data: {
        label: string;
        hotels?: Array<(number | string)>;
        tag_category?: (number | string);
        locale?: string;
        localizations?: Array<(number | string)>;
    };
};

export type TagResponse = {
    data?: Tag;
    meta?: {
        [key: string]: unknown;
    };
};

export type GetAboutData = {
    query?: {
        /**
         * Fields to return (ex: title,author)
         */
        fields?: string;
        /**
         * Filters to apply
         */
        filters?: {
            [key: string]: unknown;
        };
        /**
         * Locale to apply
         */
        locale?: string;
        /**
         * Number of entities to return (default: 25)
         */
        'pagination[limit]'?: number;
        /**
         * Page number (default: 0)
         */
        'pagination[page]'?: number;
        /**
         * Page size (default: 25)
         */
        'pagination[pageSize]'?: number;
        /**
         * Offset value (default: 0)
         */
        'pagination[start]'?: number;
        /**
         * Return page/pageSize (default: true)
         */
        'pagination[withCount]'?: boolean;
        /**
         * Relations to return
         */
        populate?: string;
        /**
         * Sort by attributes ascending (asc) or descending (desc)
         */
        sort?: string;
    };
};

export type GetAboutResponse = (AboutResponse);

export type GetAboutError = (Error);

export type PutAboutData = {
    body: AboutRequest;
};

export type PutAboutResponse = (AboutResponse);

export type PutAboutError = (Error);

export type DeleteAboutResponse = (number);

export type DeleteAboutError = (Error);

export type GetArticlesData = {
    query?: {
        /**
         * Fields to return (ex: title,author)
         */
        fields?: string;
        /**
         * Filters to apply
         */
        filters?: {
            [key: string]: unknown;
        };
        /**
         * Locale to apply
         */
        locale?: string;
        /**
         * Number of entities to return (default: 25)
         */
        'pagination[limit]'?: number;
        /**
         * Page number (default: 0)
         */
        'pagination[page]'?: number;
        /**
         * Page size (default: 25)
         */
        'pagination[pageSize]'?: number;
        /**
         * Offset value (default: 0)
         */
        'pagination[start]'?: number;
        /**
         * Return page/pageSize (default: true)
         */
        'pagination[withCount]'?: boolean;
        /**
         * Relations to return
         */
        populate?: string;
        /**
         * Sort by attributes ascending (asc) or descending (desc)
         */
        sort?: string;
    };
};

export type GetArticlesResponse = (ArticleListResponse);

export type GetArticlesError = (Error);

export type PostArticlesData = {
    body: ArticleRequest;
};

export type PostArticlesResponse = (ArticleResponse);

export type PostArticlesError = (Error);

export type GetArticlesIdData = {
    path: {
        id: number;
    };
};

export type GetArticlesIdResponse = (ArticleResponse);

export type GetArticlesIdError = (Error);

export type PutArticlesIdData = {
    body: ArticleRequest;
    path: {
        id: number;
    };
};

export type PutArticlesIdResponse = (ArticleResponse);

export type PutArticlesIdError = (Error);

export type DeleteArticlesIdData = {
    path: {
        id: number;
    };
};

export type DeleteArticlesIdResponse = (number);

export type DeleteArticlesIdError = (Error);

export type GetAuthorsData = {
    query?: {
        /**
         * Fields to return (ex: title,author)
         */
        fields?: string;
        /**
         * Filters to apply
         */
        filters?: {
            [key: string]: unknown;
        };
        /**
         * Locale to apply
         */
        locale?: string;
        /**
         * Number of entities to return (default: 25)
         */
        'pagination[limit]'?: number;
        /**
         * Page number (default: 0)
         */
        'pagination[page]'?: number;
        /**
         * Page size (default: 25)
         */
        'pagination[pageSize]'?: number;
        /**
         * Offset value (default: 0)
         */
        'pagination[start]'?: number;
        /**
         * Return page/pageSize (default: true)
         */
        'pagination[withCount]'?: boolean;
        /**
         * Relations to return
         */
        populate?: string;
        /**
         * Sort by attributes ascending (asc) or descending (desc)
         */
        sort?: string;
    };
};

export type GetAuthorsResponse = (AuthorListResponse);

export type GetAuthorsError = (Error);

export type PostAuthorsData = {
    body: AuthorRequest;
};

export type PostAuthorsResponse = (AuthorResponse);

export type PostAuthorsError = (Error);

export type GetAuthorsIdData = {
    path: {
        id: number;
    };
};

export type GetAuthorsIdResponse = (AuthorResponse);

export type GetAuthorsIdError = (Error);

export type PutAuthorsIdData = {
    body: AuthorRequest;
    path: {
        id: number;
    };
};

export type PutAuthorsIdResponse = (AuthorResponse);

export type PutAuthorsIdError = (Error);

export type DeleteAuthorsIdData = {
    path: {
        id: number;
    };
};

export type DeleteAuthorsIdResponse = (number);

export type DeleteAuthorsIdError = (Error);

export type GetCategoriesData = {
    query?: {
        /**
         * Fields to return (ex: title,author)
         */
        fields?: string;
        /**
         * Filters to apply
         */
        filters?: {
            [key: string]: unknown;
        };
        /**
         * Locale to apply
         */
        locale?: string;
        /**
         * Number of entities to return (default: 25)
         */
        'pagination[limit]'?: number;
        /**
         * Page number (default: 0)
         */
        'pagination[page]'?: number;
        /**
         * Page size (default: 25)
         */
        'pagination[pageSize]'?: number;
        /**
         * Offset value (default: 0)
         */
        'pagination[start]'?: number;
        /**
         * Return page/pageSize (default: true)
         */
        'pagination[withCount]'?: boolean;
        /**
         * Relations to return
         */
        populate?: string;
        /**
         * Sort by attributes ascending (asc) or descending (desc)
         */
        sort?: string;
    };
};

export type GetCategoriesResponse = (CategoryListResponse);

export type GetCategoriesError = (Error);

export type PostCategoriesData = {
    body: CategoryRequest;
};

export type PostCategoriesResponse = (CategoryResponse);

export type PostCategoriesError = (Error);

export type GetCategoriesIdData = {
    path: {
        id: number;
    };
};

export type GetCategoriesIdResponse = (CategoryResponse);

export type GetCategoriesIdError = (Error);

export type PutCategoriesIdData = {
    body: CategoryRequest;
    path: {
        id: number;
    };
};

export type PutCategoriesIdResponse = (CategoryResponse);

export type PutCategoriesIdError = (Error);

export type DeleteCategoriesIdData = {
    path: {
        id: number;
    };
};

export type DeleteCategoriesIdResponse = (number);

export type DeleteCategoriesIdError = (Error);

export type GetGlobalData = {
    query?: {
        /**
         * Fields to return (ex: title,author)
         */
        fields?: string;
        /**
         * Filters to apply
         */
        filters?: {
            [key: string]: unknown;
        };
        /**
         * Locale to apply
         */
        locale?: string;
        /**
         * Number of entities to return (default: 25)
         */
        'pagination[limit]'?: number;
        /**
         * Page number (default: 0)
         */
        'pagination[page]'?: number;
        /**
         * Page size (default: 25)
         */
        'pagination[pageSize]'?: number;
        /**
         * Offset value (default: 0)
         */
        'pagination[start]'?: number;
        /**
         * Return page/pageSize (default: true)
         */
        'pagination[withCount]'?: boolean;
        /**
         * Relations to return
         */
        populate?: string;
        /**
         * Sort by attributes ascending (asc) or descending (desc)
         */
        sort?: string;
    };
};

export type GetGlobalResponse = (GlobalResponse);

export type GetGlobalError = (Error);

export type PutGlobalData = {
    body: GlobalRequest;
};

export type PutGlobalResponse = (GlobalResponse);

export type PutGlobalError = (Error);

export type DeleteGlobalResponse = (number);

export type DeleteGlobalError = (Error);

export type GetHomePageData = {
    query?: {
        /**
         * Fields to return (ex: title,author)
         */
        fields?: string;
        /**
         * Filters to apply
         */
        filters?: {
            [key: string]: unknown;
        };
        /**
         * Locale to apply
         */
        locale?: string;
        /**
         * Number of entities to return (default: 25)
         */
        'pagination[limit]'?: number;
        /**
         * Page number (default: 0)
         */
        'pagination[page]'?: number;
        /**
         * Page size (default: 25)
         */
        'pagination[pageSize]'?: number;
        /**
         * Offset value (default: 0)
         */
        'pagination[start]'?: number;
        /**
         * Return page/pageSize (default: true)
         */
        'pagination[withCount]'?: boolean;
        /**
         * Relations to return
         */
        populate?: string;
        /**
         * Sort by attributes ascending (asc) or descending (desc)
         */
        sort?: string;
    };
};

export type GetHomePageResponse = (HomePageResponse);

export type GetHomePageError = (Error);

export type PutHomePageData = {
    body: HomePageRequest;
};

export type PutHomePageResponse = (HomePageResponse);

export type PutHomePageError = (Error);

export type DeleteHomePageResponse = (number);

export type DeleteHomePageError = (Error);

export type GetHotelsData = {
    query?: {
        /**
         * Fields to return (ex: title,author)
         */
        fields?: string;
        /**
         * Filters to apply
         */
        filters?: {
            [key: string]: unknown;
        };
        /**
         * Locale to apply
         */
        locale?: string;
        /**
         * Number of entities to return (default: 25)
         */
        'pagination[limit]'?: number;
        /**
         * Page number (default: 0)
         */
        'pagination[page]'?: number;
        /**
         * Page size (default: 25)
         */
        'pagination[pageSize]'?: number;
        /**
         * Offset value (default: 0)
         */
        'pagination[start]'?: number;
        /**
         * Return page/pageSize (default: true)
         */
        'pagination[withCount]'?: boolean;
        /**
         * Relations to return
         */
        populate?: string;
        /**
         * Sort by attributes ascending (asc) or descending (desc)
         */
        sort?: string;
    };
};

export type GetHotelsResponse = (HotelListResponse);

export type GetHotelsError = (Error);

export type PostHotelsData = {
    body: HotelRequest;
};

export type PostHotelsResponse = (HotelResponse);

export type PostHotelsError = (Error);

export type GetHotelsIdData = {
    path: {
        id: number;
    };
};

export type GetHotelsIdResponse = (HotelResponse);

export type GetHotelsIdError = (Error);

export type PutHotelsIdData = {
    body: HotelRequest;
    path: {
        id: number;
    };
};

export type PutHotelsIdResponse = (HotelResponse);

export type PutHotelsIdError = (Error);

export type DeleteHotelsIdData = {
    path: {
        id: number;
    };
};

export type DeleteHotelsIdResponse = (number);

export type DeleteHotelsIdError = (Error);

export type GetTagsData = {
    query?: {
        /**
         * Fields to return (ex: title,author)
         */
        fields?: string;
        /**
         * Filters to apply
         */
        filters?: {
            [key: string]: unknown;
        };
        /**
         * Locale to apply
         */
        locale?: string;
        /**
         * Number of entities to return (default: 25)
         */
        'pagination[limit]'?: number;
        /**
         * Page number (default: 0)
         */
        'pagination[page]'?: number;
        /**
         * Page size (default: 25)
         */
        'pagination[pageSize]'?: number;
        /**
         * Offset value (default: 0)
         */
        'pagination[start]'?: number;
        /**
         * Return page/pageSize (default: true)
         */
        'pagination[withCount]'?: boolean;
        /**
         * Relations to return
         */
        populate?: string;
        /**
         * Sort by attributes ascending (asc) or descending (desc)
         */
        sort?: string;
    };
};

export type GetTagsResponse = (TagListResponse);

export type GetTagsError = (Error);

export type PostTagsData = {
    body: TagRequest;
};

export type PostTagsResponse = (TagResponse);

export type PostTagsError = (Error);

export type GetTagsIdData = {
    path: {
        id: number;
    };
};

export type GetTagsIdResponse = (TagResponse);

export type GetTagsIdError = (Error);

export type PutTagsIdData = {
    body: TagRequest;
    path: {
        id: number;
    };
};

export type PutTagsIdResponse = (TagResponse);

export type PutTagsIdError = (Error);

export type DeleteTagsIdData = {
    path: {
        id: number;
    };
};

export type DeleteTagsIdResponse = (number);

export type DeleteTagsIdError = (Error);

export type GetTagCategoriesData = {
    query?: {
        /**
         * Fields to return (ex: title,author)
         */
        fields?: string;
        /**
         * Filters to apply
         */
        filters?: {
            [key: string]: unknown;
        };
        /**
         * Locale to apply
         */
        locale?: string;
        /**
         * Number of entities to return (default: 25)
         */
        'pagination[limit]'?: number;
        /**
         * Page number (default: 0)
         */
        'pagination[page]'?: number;
        /**
         * Page size (default: 25)
         */
        'pagination[pageSize]'?: number;
        /**
         * Offset value (default: 0)
         */
        'pagination[start]'?: number;
        /**
         * Return page/pageSize (default: true)
         */
        'pagination[withCount]'?: boolean;
        /**
         * Relations to return
         */
        populate?: string;
        /**
         * Sort by attributes ascending (asc) or descending (desc)
         */
        sort?: string;
    };
};

export type GetTagCategoriesResponse = (TagCategoryListResponse);

export type GetTagCategoriesError = (Error);

export type PostTagCategoriesData = {
    body: TagCategoryRequest;
};

export type PostTagCategoriesResponse = (TagCategoryResponse);

export type PostTagCategoriesError = (Error);

export type GetTagCategoriesIdData = {
    path: {
        id: number;
    };
};

export type GetTagCategoriesIdResponse = (TagCategoryResponse);

export type GetTagCategoriesIdError = (Error);

export type PutTagCategoriesIdData = {
    body: TagCategoryRequest;
    path: {
        id: number;
    };
};

export type PutTagCategoriesIdResponse = (TagCategoryResponse);

export type PutTagCategoriesIdError = (Error);

export type DeleteTagCategoriesIdData = {
    path: {
        id: number;
    };
};

export type DeleteTagCategoriesIdResponse = (number);

export type DeleteTagCategoriesIdError = (Error);
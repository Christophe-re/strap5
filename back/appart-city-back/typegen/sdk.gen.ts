// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-fetch';
import type { GetAboutData, GetAboutError, GetAboutResponse, PutAboutData, PutAboutError, PutAboutResponse, DeleteAboutError, DeleteAboutResponse, GetArticlesData, GetArticlesError, GetArticlesResponse, PostArticlesData, PostArticlesError, PostArticlesResponse, GetArticlesIdData, GetArticlesIdError, GetArticlesIdResponse, PutArticlesIdData, PutArticlesIdError, PutArticlesIdResponse, DeleteArticlesIdData, DeleteArticlesIdError, DeleteArticlesIdResponse, GetAuthorsData, GetAuthorsError, GetAuthorsResponse, PostAuthorsData, PostAuthorsError, PostAuthorsResponse, GetAuthorsIdData, GetAuthorsIdError, GetAuthorsIdResponse, PutAuthorsIdData, PutAuthorsIdError, PutAuthorsIdResponse, DeleteAuthorsIdData, DeleteAuthorsIdError, DeleteAuthorsIdResponse, GetCategoriesData, GetCategoriesError, GetCategoriesResponse, PostCategoriesData, PostCategoriesError, PostCategoriesResponse, GetCategoriesIdData, GetCategoriesIdError, GetCategoriesIdResponse, PutCategoriesIdData, PutCategoriesIdError, PutCategoriesIdResponse, DeleteCategoriesIdData, DeleteCategoriesIdError, DeleteCategoriesIdResponse, GetGlobalData, GetGlobalError, GetGlobalResponse, PutGlobalData, PutGlobalError, PutGlobalResponse, DeleteGlobalError, DeleteGlobalResponse, GetHomePageData, GetHomePageError, GetHomePageResponse, PutHomePageData, PutHomePageError, PutHomePageResponse, DeleteHomePageError, DeleteHomePageResponse, GetHotelsData, GetHotelsError, GetHotelsResponse, PostHotelsData, PostHotelsError, PostHotelsResponse, GetHotelsIdData, GetHotelsIdError, GetHotelsIdResponse, PutHotelsIdData, PutHotelsIdError, PutHotelsIdResponse, DeleteHotelsIdData, DeleteHotelsIdError, DeleteHotelsIdResponse, GetTagsData, GetTagsError, GetTagsResponse, PostTagsData, PostTagsError, PostTagsResponse, GetTagsIdData, GetTagsIdError, GetTagsIdResponse, PutTagsIdData, PutTagsIdError, PutTagsIdResponse, DeleteTagsIdData, DeleteTagsIdError, DeleteTagsIdResponse, GetTagCategoriesData, GetTagCategoriesError, GetTagCategoriesResponse, PostTagCategoriesData, PostTagCategoriesError, PostTagCategoriesResponse, GetTagCategoriesIdData, GetTagCategoriesIdError, GetTagCategoriesIdResponse, PutTagCategoriesIdData, PutTagCategoriesIdError, PutTagCategoriesIdResponse, DeleteTagCategoriesIdData, DeleteTagCategoriesIdError, DeleteTagCategoriesIdResponse } from './types.gen';

export const client = createClient(createConfig());

export const getAbout = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetAboutData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAboutResponse, GetAboutError, ThrowOnError>({
        ...options,
        url: '/about'
    });
};

export const putAbout = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutAboutData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutAboutResponse, PutAboutError, ThrowOnError>({
        ...options,
        url: '/about'
    });
};

export const deleteAbout = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteAboutResponse, DeleteAboutError, ThrowOnError>({
        ...options,
        url: '/about'
    });
};

export const getArticles = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetArticlesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetArticlesResponse, GetArticlesError, ThrowOnError>({
        ...options,
        url: '/articles'
    });
};

export const postArticles = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostArticlesData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostArticlesResponse, PostArticlesError, ThrowOnError>({
        ...options,
        url: '/articles'
    });
};

export const getArticlesId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetArticlesIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetArticlesIdResponse, GetArticlesIdError, ThrowOnError>({
        ...options,
        url: '/articles/{id}'
    });
};

export const putArticlesId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutArticlesIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutArticlesIdResponse, PutArticlesIdError, ThrowOnError>({
        ...options,
        url: '/articles/{id}'
    });
};

export const deleteArticlesId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteArticlesIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteArticlesIdResponse, DeleteArticlesIdError, ThrowOnError>({
        ...options,
        url: '/articles/{id}'
    });
};

export const getAuthors = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetAuthorsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAuthorsResponse, GetAuthorsError, ThrowOnError>({
        ...options,
        url: '/authors'
    });
};

export const postAuthors = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostAuthorsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostAuthorsResponse, PostAuthorsError, ThrowOnError>({
        ...options,
        url: '/authors'
    });
};

export const getAuthorsId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetAuthorsIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAuthorsIdResponse, GetAuthorsIdError, ThrowOnError>({
        ...options,
        url: '/authors/{id}'
    });
};

export const putAuthorsId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutAuthorsIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutAuthorsIdResponse, PutAuthorsIdError, ThrowOnError>({
        ...options,
        url: '/authors/{id}'
    });
};

export const deleteAuthorsId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteAuthorsIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteAuthorsIdResponse, DeleteAuthorsIdError, ThrowOnError>({
        ...options,
        url: '/authors/{id}'
    });
};

export const getCategories = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetCategoriesResponse, GetCategoriesError, ThrowOnError>({
        ...options,
        url: '/categories'
    });
};

export const postCategories = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostCategoriesResponse, PostCategoriesError, ThrowOnError>({
        ...options,
        url: '/categories'
    });
};

export const getCategoriesId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetCategoriesIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetCategoriesIdResponse, GetCategoriesIdError, ThrowOnError>({
        ...options,
        url: '/categories/{id}'
    });
};

export const putCategoriesId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutCategoriesIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutCategoriesIdResponse, PutCategoriesIdError, ThrowOnError>({
        ...options,
        url: '/categories/{id}'
    });
};

export const deleteCategoriesId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteCategoriesIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteCategoriesIdResponse, DeleteCategoriesIdError, ThrowOnError>({
        ...options,
        url: '/categories/{id}'
    });
};

export const getGlobal = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetGlobalData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetGlobalResponse, GetGlobalError, ThrowOnError>({
        ...options,
        url: '/global'
    });
};

export const putGlobal = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutGlobalData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutGlobalResponse, PutGlobalError, ThrowOnError>({
        ...options,
        url: '/global'
    });
};

export const deleteGlobal = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteGlobalResponse, DeleteGlobalError, ThrowOnError>({
        ...options,
        url: '/global'
    });
};

export const getHomePage = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetHomePageData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetHomePageResponse, GetHomePageError, ThrowOnError>({
        ...options,
        url: '/home-page'
    });
};

export const putHomePage = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutHomePageData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutHomePageResponse, PutHomePageError, ThrowOnError>({
        ...options,
        url: '/home-page'
    });
};

export const deleteHomePage = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteHomePageResponse, DeleteHomePageError, ThrowOnError>({
        ...options,
        url: '/home-page'
    });
};

export const getHotels = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetHotelsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetHotelsResponse, GetHotelsError, ThrowOnError>({
        ...options,
        url: '/hotels'
    });
};

export const postHotels = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostHotelsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostHotelsResponse, PostHotelsError, ThrowOnError>({
        ...options,
        url: '/hotels'
    });
};

export const getHotelsId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetHotelsIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetHotelsIdResponse, GetHotelsIdError, ThrowOnError>({
        ...options,
        url: '/hotels/{id}'
    });
};

export const putHotelsId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutHotelsIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutHotelsIdResponse, PutHotelsIdError, ThrowOnError>({
        ...options,
        url: '/hotels/{id}'
    });
};

export const deleteHotelsId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteHotelsIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteHotelsIdResponse, DeleteHotelsIdError, ThrowOnError>({
        ...options,
        url: '/hotels/{id}'
    });
};

export const getTags = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetTagsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetTagsResponse, GetTagsError, ThrowOnError>({
        ...options,
        url: '/tags'
    });
};

export const postTags = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostTagsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostTagsResponse, PostTagsError, ThrowOnError>({
        ...options,
        url: '/tags'
    });
};

export const getTagsId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetTagsIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetTagsIdResponse, GetTagsIdError, ThrowOnError>({
        ...options,
        url: '/tags/{id}'
    });
};

export const putTagsId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutTagsIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutTagsIdResponse, PutTagsIdError, ThrowOnError>({
        ...options,
        url: '/tags/{id}'
    });
};

export const deleteTagsId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteTagsIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteTagsIdResponse, DeleteTagsIdError, ThrowOnError>({
        ...options,
        url: '/tags/{id}'
    });
};

export const getTagCategories = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetTagCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetTagCategoriesResponse, GetTagCategoriesError, ThrowOnError>({
        ...options,
        url: '/tag-categories'
    });
};

export const postTagCategories = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostTagCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostTagCategoriesResponse, PostTagCategoriesError, ThrowOnError>({
        ...options,
        url: '/tag-categories'
    });
};

export const getTagCategoriesId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetTagCategoriesIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetTagCategoriesIdResponse, GetTagCategoriesIdError, ThrowOnError>({
        ...options,
        url: '/tag-categories/{id}'
    });
};

export const putTagCategoriesId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutTagCategoriesIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutTagCategoriesIdResponse, PutTagCategoriesIdError, ThrowOnError>({
        ...options,
        url: '/tag-categories/{id}'
    });
};

export const deleteTagCategoriesId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteTagCategoriesIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteTagCategoriesIdResponse, DeleteTagCategoriesIdError, ThrowOnError>({
        ...options,
        url: '/tag-categories/{id}'
    });
};